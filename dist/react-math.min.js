!function(root,factory){"object"==typeof exports&&"object"==typeof module?module.exports=factory(require("React")):"function"==typeof define&&define.amd?define(["React"],factory):"object"==typeof exports?exports.MathML=factory(require("React")):root.MathML=factory(root.React)}(this,function(__WEBPACK_EXTERNAL_MODULE_2__){return function(modules){function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={exports:{},id:moduleId,loaded:!1};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.loaded=!0,module.exports}var installedModules={};return __webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.p="",__webpack_require__(0)}([function(module,exports,__webpack_require__){module.exports=__webpack_require__(1)},function(module,exports,__webpack_require__){var React=__webpack_require__(2),parse=__webpack_require__(3);module.exports=React.createClass({displayName:"MathML",getDefaultProps:function(){return{text:""}},render:function(){var mathML=parse(this.props.text).toString();return React.createElement("div",{dangerouslySetInnerHTML:{__html:mathML}})}})},function(module){module.exports=__WEBPACK_EXTERNAL_MODULE_2__},function(module,exports,__webpack_require__){function parseMath(str){var frag,node;return AMnestingDepth=0,frag=AMparseExpr(str.replace(/^\s+/g,""),!1)[0],node=createMmlNode("math",frag),node.setAttribute("title",str.replace(/\s+/g," ")),node}function createMmlNode(t,frag){var node=useFakes?new ml.Node(t):document.createElementNS("http://www.w3.org/1998/Math/MathML",t);return"string"==typeof frag&&(frag=useFakes?new ml.Text(frag):document.createTextNode(frag)),frag&&node.appendChild(frag),node}function createFragment(){return useFakes?new ml.Node("fragment"):document.createDocumentFragment()}function AMremoveCharsAndBlanks(str,n){var st;st=str.slice("\\"==str.charAt(n)&&"\\"!=str.charAt(n+1)&&" "!=str.charAt(n+1)?n+1:n);for(var i=0;i<st.length&&st.charCodeAt(i)<=32;i+=1);return st.slice(i)}function position(arr,str,n){if(0==n){var h,m;for(n=-1,h=arr.length;h>n+1;)m=n+h>>1,arr[m]<str?n=m:h=m;return h}for(var i=n;i<arr.length&&arr[i]<str;i++);return i}function AMgetSymbol(str){for(var mk,st,tagst,k=0,j=0,match="",more=!0,i=1;i<=str.length&&more;i++)st=str.slice(0,i),j=k,k=position(AMnames,st,j),k<AMnames.length&&str.slice(0,AMnames[k].length)==AMnames[k]&&(match=AMnames[k],mk=k,i=match.length),more=k<AMnames.length&&str.slice(0,AMnames[k].length)>=AMnames[k];if(AMpreviousSymbol=AMcurrentSymbol,""!=match)return AMcurrentSymbol=AMsymbols[mk].ttype,AMsymbols[mk];AMcurrentSymbol=CONST,k=1,st=str.slice(0,1);for(var integ=!0;st>="0"&&"9">=st&&k<=str.length;)st=str.slice(k,k+1),k++;if("."==st&&(st=str.slice(k,k+1),st>="0"&&"9">=st))for(integ=!1,k++;st>="0"&&"9">=st&&k<=str.length;)st=str.slice(k,k+1),k++;return integ&&k>1||k>2?(st=str.slice(0,k-1),tagst="mn"):(k=2,st=str.slice(0,1),tagst=("A">st||st>"Z")&&("a">st||st>"z")?"mo":"mi"),"-"==st&&AMpreviousSymbol==INFIX?(AMcurrentSymbol=INFIX,{input:st,tag:tagst,output:st,ttype:UNARY,func:!0}):{input:st,tag:tagst,output:st,ttype:CONST}}function AMremoveBrackets(node){if("mrow"==node.nodeName){var start=node.firstChild.firstChild.nodeValue;("("==start||"["==start||"{"==start)&&node.removeChild(node.firstChild);var end=node.lastChild.firstChild.nodeValue;(")"==end||"]"==end||"}"==end)&&node.removeChild(node.lastChild)}}function AMparseSexpr(str){var symbol,node,result,i,st;if(str=AMremoveCharsAndBlanks(str,0),symbol=AMgetSymbol(str),null==symbol||symbol.ttype==RIGHTBRACKET&&AMnestingDepth>0)return[null,str];switch(symbol.ttype==DEFINITION&&(str=symbol.output+AMremoveCharsAndBlanks(str,symbol.input.length),symbol=AMgetSymbol(str)),symbol.ttype){case UNDEROVER:case CONST:return str=AMremoveCharsAndBlanks(str,symbol.input.length),[createMmlNode(symbol.tag,symbol.output),str];case LEFTBRACKET:return AMnestingDepth++,str=AMremoveCharsAndBlanks(str,symbol.input.length),result=AMparseExpr(str,!0),AMnestingDepth--,"boolean"==typeof symbol.invisible&&symbol.invisible?node=createMmlNode("mrow",result[0]):(node=createMmlNode("mo",symbol.output),node=createMmlNode("mrow",node),node.appendChild(result[0])),[node,result[1]];case TEXT:var mRow=createMmlNode("mrow");return symbol!=AMquote&&(str=AMremoveCharsAndBlanks(str,symbol.input.length)),i="{"==str.charAt(0)?str.indexOf("}"):"("==str.charAt(0)?str.indexOf(")"):"["==str.charAt(0)?str.indexOf("]"):symbol==AMquote?str.slice(1).indexOf('"')+1:0,-1==i&&(i=str.length),st=str.slice(1,i)," "==st.charAt(0)&&(node=createMmlNode("mspace"),node.setAttribute("width","1ex"),mRow.appendChild(node)),mRow.appendChild(createMmlNode(symbol.tag,st))," "==st.charAt(st.length-1)&&(node=createMmlNode("mspace"),node.setAttribute("width","1ex"),mRow.appendChild(node)),str=AMremoveCharsAndBlanks(str,i+1),[mRow,str];case UNARY:if(str=AMremoveCharsAndBlanks(str,symbol.input.length),result=AMparseSexpr(str),null==result[0])return[createMmlNode(symbol.tag,symbol.output),str];if("boolean"==typeof symbol.func&&symbol.func)return st=str.charAt(0),"^"==st||"_"==st||"/"==st||"|"==st||","==st?[createMmlNode(symbol.tag,symbol.output),str]:(node=createMmlNode("mrow",createMmlNode(symbol.tag,symbol.output)),node.appendChild(result[0]),[node,result[1]]);if(AMremoveBrackets(result[0]),"sqrt"==symbol.input)return[createMmlNode(symbol.tag,result[0]),result[1]];if("boolean"==typeof symbol.acc&&symbol.acc)return node=createMmlNode(symbol.tag,result[0]),node.appendChild(createMmlNode("mo",symbol.output)),[node,result[1]];if("undefined"!=typeof symbol.codes)for(i=0;i<result[0].childNodes.length;i++)if("mi"==result[0].childNodes[i].nodeName||"mi"==result[0].nodeName){st="mi"==result[0].nodeName?result[0].firstChild.nodeValue:result[0].childNodes[i].firstChild.nodeValue;for(var newst=[],j=0;j<st.length;j++)newst+=st.charCodeAt(j)>64&&st.charCodeAt(j)<91?String.fromCharCode(symbol.codes[st.charCodeAt(j)-65]):st.charAt(j);"mi"==result[0].nodeName?result[0]=createMmlNode("mo",newst):result[0].replaceChild(createMmlNode("mo",newst),result[0].childNodes[i])}return node=createMmlNode(symbol.tag,result[0]),node.setAttribute(symbol.atname,symbol.atval),[node,result[1]];case BINARY:if(str=AMremoveCharsAndBlanks(str,symbol.input.length),result=AMparseSexpr(str),null==result[0])return[createMmlNode("mo",symbol.input),str];AMremoveBrackets(result[0]);var result2=AMparseSexpr(result[1]);if(null==result2[0])return[createMmlNode("mo",symbol.input),str];AMremoveBrackets(result2[0]);var binaryTag=createMmlNode(symbol.tag);return("root"==symbol.input||"stackrel"==symbol.input)&&binaryTag.appendChild(result2[0]),binaryTag.appendChild(result[0]),"frac"==symbol.input&&binaryTag.appendChild(result2[0]),[binaryTag,result2[1]];case INFIX:return str=AMremoveCharsAndBlanks(str,symbol.input.length),[createMmlNode("mo",symbol.output),str];case SPACE:var mRow=createMmlNode("mrow");return str=AMremoveCharsAndBlanks(str,symbol.input.length),node=createMmlNode("mspace"),node.setAttribute("width","1ex"),mRow.appendChild(node),mRow.appendChild(createMmlNode(symbol.tag,symbol.output)),node=createMmlNode("mspace"),node.setAttribute("width","1ex"),mRow.appendChild(node),[mRow,str];case LEFTRIGHT:AMnestingDepth++,str=AMremoveCharsAndBlanks(str,symbol.input.length),result=AMparseExpr(str,!1),AMnestingDepth--;var st="";return null!=result[0].lastChild&&(st=result[0].lastChild.firstChild.nodeValue),"|"==st?(node=createMmlNode("mo",symbol.output),node=createMmlNode("mrow",node),node.appendChild(result[0]),[node,result[1]]):(node=createMmlNode("mo","∣"),node=createMmlNode("mrow",node),[node,str]);default:return str=AMremoveCharsAndBlanks(str,symbol.input.length),[createMmlNode(symbol.tag,symbol.output),str]}}function AMparseIexpr(str){var symbol,sym1,sym2,node,result,underover;if(str=AMremoveCharsAndBlanks(str,0),sym1=AMgetSymbol(str),result=AMparseSexpr(str),node=result[0],str=result[1],symbol=AMgetSymbol(str),symbol.ttype==INFIX&&"/"!=symbol.input)if(str=AMremoveCharsAndBlanks(str,symbol.input.length),result=AMparseSexpr(str),null==result[0]?result[0]=createMmlNode("mo","□"):AMremoveBrackets(result[0]),str=result[1],"_"==symbol.input)if(sym2=AMgetSymbol(str),underover=sym1.ttype==UNDEROVER,"^"==sym2.input){str=AMremoveCharsAndBlanks(str,sym2.input.length);var res2=AMparseSexpr(str);AMremoveBrackets(res2[0]),str=res2[1],node=createMmlNode(underover?"munderover":"msubsup",node),node.appendChild(result[0]),node.appendChild(res2[0]),node=createMmlNode("mrow",node)}else node=createMmlNode(underover?"munder":"msub",node),node.appendChild(result[0]);else node=createMmlNode(symbol.tag,node),node.appendChild(result[0]);return[node,str]}function AMparseExpr(str,rightbracket){var symbol,node,result,i,newFrag=createFragment();do str=AMremoveCharsAndBlanks(str,0),result=AMparseIexpr(str),node=result[0],str=result[1],symbol=AMgetSymbol(str),symbol.ttype==INFIX&&"/"==symbol.input?(str=AMremoveCharsAndBlanks(str,symbol.input.length),result=AMparseIexpr(str),null==result[0]?result[0]=createMmlNode("mo","□"):AMremoveBrackets(result[0]),str=result[1],AMremoveBrackets(node),node=createMmlNode(symbol.tag,node),node.appendChild(result[0]),newFrag.appendChild(node),symbol=AMgetSymbol(str)):void 0!=node&&newFrag.appendChild(node);while((symbol.ttype!=RIGHTBRACKET&&(symbol.ttype!=LEFTRIGHT||rightbracket)||0==AMnestingDepth)&&null!=symbol&&""!=symbol.output);if(symbol.ttype==RIGHTBRACKET||symbol.ttype==LEFTRIGHT){var len=newFrag.childNodes.length;if(len>0&&"mrow"==newFrag.childNodes[len-1].nodeName&&len>1&&"mo"==newFrag.childNodes[len-2].nodeName&&","==newFrag.childNodes[len-2].firstChild.nodeValue){var right=newFrag.childNodes[len-1].lastChild.firstChild.nodeValue;if(")"==right||"]"==right){var left=newFrag.childNodes[len-1].firstChild.firstChild.nodeValue;if("("==left&&")"==right&&"}"!=symbol.output||"["==left&&"]"==right){var pos=[],matrix=!0,m=newFrag.childNodes.length;for(i=0;matrix&&m>i;i+=2){if(pos[i]=[],node=newFrag.childNodes[i],matrix&&(matrix="mrow"==node.nodeName&&(i==m-1||"mo"==node.nextSibling.nodeName&&","==node.nextSibling.firstChild.nodeValue)&&node.firstChild.firstChild.nodeValue==left&&node.lastChild.firstChild.nodeValue==right),matrix)for(var j=0;j<node.childNodes.length;j++)","==node.childNodes[j].firstChild.nodeValue&&(pos[i][pos[i].length]=j);matrix&&i>1&&(matrix=pos[i].length==pos[i-2].length)}if(matrix){var n,k,table=createMmlNode("mtable");for(i=0;m>i;i+=2){var row=createMmlNode("mtr"),tableCell=createMmlNode("mtd");for(node=newFrag.firstChild,n=node.childNodes.length,k=0,node.removeChild(node.firstChild),j=1;n-1>j;j++)"undefined"!=typeof pos[i][k]&&j==pos[i][k]?(node.removeChild(node.firstChild),row.appendChild(tableCell),tableCell=createMmlNode("mtd"),k++):tableCell.appendChild(node.firstChild);row.appendChild(tableCell),newFrag.childNodes.length>2&&(newFrag.removeChild(newFrag.firstChild),newFrag.removeChild(newFrag.firstChild)),table.appendChild(row)}node=table,"boolean"==typeof symbol.invisible&&symbol.invisible&&node.setAttribute("columnalign","left"),newFrag.replaceChild(node,newFrag.firstChild)}}}}str=AMremoveCharsAndBlanks(str,symbol.input.length),"boolean"==typeof symbol.invisible&&symbol.invisible||(node=createMmlNode("mo",symbol.output),newFrag.appendChild(node))}return[newFrag,str]}var ml=__webpack_require__(4),tokenTypes=__webpack_require__(5),CONST=tokenTypes.CONST,UNARY=tokenTypes.UNARY,BINARY=tokenTypes.BINARY,INFIX=tokenTypes.INFIX,LEFTBRACKET=tokenTypes.LEFTBRACKET,RIGHTBRACKET=tokenTypes.RIGHTBRACKET,SPACE=tokenTypes.SPACE,UNDEROVER=tokenTypes.UNDEROVER,DEFINITION=tokenTypes.DEFINITION,LEFTRIGHT=tokenTypes.LEFTRIGHT,TEXT=tokenTypes.TEXT,AMsymbols=__webpack_require__(6),AMnames=AMsymbols.map(function(symbol){return symbol.input});module.exports=parseMath;var AMnestingDepth,AMpreviousSymbol,AMcurrentSymbol,useFakes=!0,AMquote={input:'"',tag:"mtext",output:"mbox",tex:null,ttype:TEXT}},function(module,exports,__webpack_require__){function Node(type){this.firstChild=null,this.lastChild=null,this.nodeName=type,this.childNodes=[],this.attributes={}}function Text(text){this.nodeValue=text}var escapeStr=__webpack_require__(7);exports.Node=Node,exports.Text=Text,Node.prototype.toElement=function(){for(var el=document.createElementNS("http://www.w3.org/1998/Math/MathML",this.nodeName),i=0;i<this.childNodes.length;i++)el.appendChild(this.childNodes[i].toElement());for(var attributes=Object.keys(this.attributes),i=0;i<attributes.length;i++)el.setAttribute(attributes[i],this.attributes[attributes[i]]);return el},Node.prototype.toString=function(){var buf=[];buf.push("<",this.nodeName);for(var attributes=Object.keys(this.attributes),i=0;i<attributes.length;i++)buf.push(" ",attributes[i],'="',this.attributes[attributes[i]],'"');buf.push(">");for(var i=0;i<this.childNodes.length;i++)buf.push(this.childNodes[i].toString());return buf.push("</"+this.nodeName+">"),buf.join("")},Node.prototype.setAttribute=function(attr,val){this.attributes[attr]=val},Node.prototype.appendChild=function(child){if("string"==typeof child)this.appendChild(new Text(child),!0);else if("fragment"===child.nodeName)for(var len=child.childNodes.length,i=0;len>i;i++)this.appendChild(child.childNodes[0],!0);else child.parentNode&&child.parentNode.removeChild(child),child.parentNode=this,this.childNodes.push(child);return this.updateChildNodes(),child},Node.prototype.removeChild=function(child){child.nextSibling=null;var removed=!1;return this.childNodes=this.childNodes.filter(function(c){return removed||c!==child?!0:(removed=!0,!1)}),child.parentNode=null,this.updateChildNodes(),child},Node.prototype.replaceChild=function(newChild,oldChild){return newChild.parentNode&&newChild.parentNode.removeChild(child),newChild.parentNode=this,this.childNodes=this.childNodes.map(function(c){return c===oldChild?newChild:c}),oldChild.parentNode=null,this.updateChildNodes(),oldChild},Node.prototype.updateChildNodes=function(){0===this.childNodes.length?(this.firstChild=null,this.lastChild=null):(this.firstChild=this.childNodes[0],this.lastChild=this.childNodes[this.childNodes.length-1]);for(var i=0;i<this.childNodes.length;i++)this.childNodes[i].nextSibling=this.childNodes[i+1]||null},Text.prototype.toElement=function(){return document.createTextNode(this.nodeValue)},Text.prototype.toString=function(){return escapeStr(this.nodeValue)}},function(module,exports){exports.CONST=0,exports.UNARY=1,exports.BINARY=2,exports.INFIX=3,exports.LEFTBRACKET=4,exports.RIGHTBRACKET=5,exports.SPACE=6,exports.UNDEROVER=7,exports.DEFINITION=8,exports.LEFTRIGHT=9,exports.TEXT=10},function(module,exports,__webpack_require__){function compareNames(s1,s2){return s1.input>s2.input?1:-1}for(var tokenTypes=__webpack_require__(5),CONST=tokenTypes.CONST,UNARY=tokenTypes.UNARY,BINARY=tokenTypes.BINARY,INFIX=tokenTypes.INFIX,LEFTBRACKET=tokenTypes.LEFTBRACKET,RIGHTBRACKET=tokenTypes.RIGHTBRACKET,SPACE=tokenTypes.SPACE,UNDEROVER=tokenTypes.UNDEROVER,DEFINITION=tokenTypes.DEFINITION,LEFTRIGHT=tokenTypes.LEFTRIGHT,TEXT=tokenTypes.TEXT,AMcal=[61237,8492,61238,61239,8496,8497,61240,8459,8464,61241,61242,8466,8499,61243,61244,61245,61246,8475,61247,61248,61249,61250,61251,61252,61253,61254],AMfrk=[61277,61278,8493,61279,61280,61281,61282,8460,8465,61283,61284,61285,61286,61287,61288,61289,61290,8476,61291,61292,61293,61294,61295,61296,61297,8488],AMbbb=[61324,61325,8450,61326,61327,61328,61329,8461,61330,61331,61332,61333,61334,8469,61335,8473,8474,8477,61336,61337,61338,61339,61340,61341,61342,8484],symbols=[{input:"alpha",tag:"mi",output:"α",tex:null,ttype:CONST},{input:"beta",tag:"mi",output:"β",tex:null,ttype:CONST},{input:"chi",tag:"mi",output:"χ",tex:null,ttype:CONST},{input:"delta",tag:"mi",output:"δ",tex:null,ttype:CONST},{input:"Delta",tag:"mo",output:"Δ",tex:null,ttype:CONST},{input:"epsi",tag:"mi",output:"ε",tex:"epsilon",ttype:CONST},{input:"varepsilon",tag:"mi",output:"ɛ",tex:null,ttype:CONST},{input:"eta",tag:"mi",output:"η",tex:null,ttype:CONST},{input:"gamma",tag:"mi",output:"γ",tex:null,ttype:CONST},{input:"Gamma",tag:"mo",output:"Γ",tex:null,ttype:CONST},{input:"iota",tag:"mi",output:"ι",tex:null,ttype:CONST},{input:"kappa",tag:"mi",output:"κ",tex:null,ttype:CONST},{input:"lambda",tag:"mi",output:"λ",tex:null,ttype:CONST},{input:"Lambda",tag:"mo",output:"Λ",tex:null,ttype:CONST},{input:"mu",tag:"mi",output:"μ",tex:null,ttype:CONST},{input:"nu",tag:"mi",output:"ν",tex:null,ttype:CONST},{input:"omega",tag:"mi",output:"ω",tex:null,ttype:CONST},{input:"Omega",tag:"mo",output:"Ω",tex:null,ttype:CONST},{input:"phi",tag:"mi",output:"φ",tex:null,ttype:CONST},{input:"varphi",tag:"mi",output:"ϕ",tex:null,ttype:CONST},{input:"Phi",tag:"mo",output:"Φ",tex:null,ttype:CONST},{input:"pi",tag:"mi",output:"π",tex:null,ttype:CONST},{input:"Pi",tag:"mo",output:"Π",tex:null,ttype:CONST},{input:"psi",tag:"mi",output:"ψ",tex:null,ttype:CONST},{input:"Psi",tag:"mi",output:"Ψ",tex:null,ttype:CONST},{input:"rho",tag:"mi",output:"ρ",tex:null,ttype:CONST},{input:"sigma",tag:"mi",output:"σ",tex:null,ttype:CONST},{input:"Sigma",tag:"mo",output:"Σ",tex:null,ttype:CONST},{input:"tau",tag:"mi",output:"τ",tex:null,ttype:CONST},{input:"theta",tag:"mi",output:"θ",tex:null,ttype:CONST},{input:"vartheta",tag:"mi",output:"ϑ",tex:null,ttype:CONST},{input:"Theta",tag:"mo",output:"Θ",tex:null,ttype:CONST},{input:"upsilon",tag:"mi",output:"υ",tex:null,ttype:CONST},{input:"xi",tag:"mi",output:"ξ",tex:null,ttype:CONST},{input:"Xi",tag:"mo",output:"Ξ",tex:null,ttype:CONST},{input:"zeta",tag:"mi",output:"ζ",tex:null,ttype:CONST},{input:"*",tag:"mo",output:"⋅",tex:"cdot",ttype:CONST},{input:"**",tag:"mo",output:"⋆",tex:"star",ttype:CONST},{input:"//",tag:"mo",output:"/",tex:null,ttype:CONST},{input:"\\\\",tag:"mo",output:"\\",tex:"backslash",ttype:CONST},{input:"setminus",tag:"mo",output:"\\",tex:null,ttype:CONST},{input:"xx",tag:"mo",output:"×",tex:"times",ttype:CONST},{input:"-:",tag:"mo",output:"÷",tex:"divide",ttype:CONST},{input:"@",tag:"mo",output:"⚬",tex:"circ",ttype:CONST},{input:"o+",tag:"mo",output:"⊕",tex:"oplus",ttype:CONST},{input:"ox",tag:"mo",output:"⊗",tex:"otimes",ttype:CONST},{input:"o.",tag:"mo",output:"⊙",tex:"odot",ttype:CONST},{input:"sum",tag:"mo",output:"∑",tex:null,ttype:UNDEROVER},{input:"prod",tag:"mo",output:"∏",tex:null,ttype:UNDEROVER},{input:"^^",tag:"mo",output:"∧",tex:"wedge",ttype:CONST},{input:"^^^",tag:"mo",output:"⋀",tex:"bigwedge",ttype:UNDEROVER},{input:"vv",tag:"mo",output:"∨",tex:"vee",ttype:CONST},{input:"vvv",tag:"mo",output:"⋁",tex:"bigvee",ttype:UNDEROVER},{input:"nn",tag:"mo",output:"∩",tex:"cap",ttype:CONST},{input:"nnn",tag:"mo",output:"⋂",tex:"bigcap",ttype:UNDEROVER},{input:"uu",tag:"mo",output:"∪",tex:"cup",ttype:CONST},{input:"uuu",tag:"mo",output:"⋃",tex:"bigcup",ttype:UNDEROVER},{input:"!=",tag:"mo",output:"≠",tex:"ne",ttype:CONST},{input:":=",tag:"mo",output:":=",tex:null,ttype:CONST},{input:"lt",tag:"mo",output:"<",tex:null,ttype:CONST},{input:"<=",tag:"mo",output:"≤",tex:"le",ttype:CONST},{input:"lt=",tag:"mo",output:"≤",tex:"leq",ttype:CONST},{input:">=",tag:"mo",output:"≥",tex:"ge",ttype:CONST},{input:"geq",tag:"mo",output:"≥",tex:null,ttype:CONST},{input:"-<",tag:"mo",output:"≺",tex:"prec",ttype:CONST},{input:"-lt",tag:"mo",output:"≺",tex:null,ttype:CONST},{input:">-",tag:"mo",output:"≻",tex:"succ",ttype:CONST},{input:"-<=",tag:"mo",output:"⪯",tex:"preceq",ttype:CONST},{input:">-=",tag:"mo",output:"⪰",tex:"succeq",ttype:CONST},{input:"in",tag:"mo",output:"∈",tex:null,ttype:CONST},{input:"!in",tag:"mo",output:"∉",tex:"notin",ttype:CONST},{input:"sub",tag:"mo",output:"⊂",tex:"subset",ttype:CONST},{input:"sup",tag:"mo",output:"⊃",tex:"supset",ttype:CONST},{input:"sube",tag:"mo",output:"⊆",tex:"subseteq",ttype:CONST},{input:"supe",tag:"mo",output:"⊇",tex:"supseteq",ttype:CONST},{input:"-=",tag:"mo",output:"≡",tex:"equiv",ttype:CONST},{input:"~=",tag:"mo",output:"≅",tex:"cong",ttype:CONST},{input:"~~",tag:"mo",output:"≈",tex:"approx",ttype:CONST},{input:"prop",tag:"mo",output:"∝",tex:"propto",ttype:CONST},{input:"and",tag:"mtext",output:"and",tex:null,ttype:SPACE},{input:"or",tag:"mtext",output:"or",tex:null,ttype:SPACE},{input:"not",tag:"mo",output:"¬",tex:"neg",ttype:CONST},{input:"=>",tag:"mo",output:"⇒",tex:"implies",ttype:CONST},{input:"if",tag:"mo",output:"if",tex:null,ttype:SPACE},{input:"<=>",tag:"mo",output:"⇔",tex:"iff",ttype:CONST},{input:"AA",tag:"mo",output:"∀",tex:"forall",ttype:CONST},{input:"EE",tag:"mo",output:"∃",tex:"exists",ttype:CONST},{input:"_|_",tag:"mo",output:"⊥",tex:"bot",ttype:CONST},{input:"TT",tag:"mo",output:"⊤",tex:"top",ttype:CONST},{input:"|--",tag:"mo",output:"⊢",tex:"vdash",ttype:CONST},{input:"|==",tag:"mo",output:"⊨",tex:"models",ttype:CONST},{input:"(",tag:"mo",output:"(",tex:null,ttype:LEFTBRACKET},{input:")",tag:"mo",output:")",tex:null,ttype:RIGHTBRACKET},{input:"[",tag:"mo",output:"[",tex:null,ttype:LEFTBRACKET},{input:"]",tag:"mo",output:"]",tex:null,ttype:RIGHTBRACKET},{input:"{",tag:"mo",output:"{",tex:null,ttype:LEFTBRACKET},{input:"}",tag:"mo",output:"}",tex:null,ttype:RIGHTBRACKET},{input:"|",tag:"mo",output:"|",tex:null,ttype:LEFTRIGHT},{input:"(:",tag:"mo",output:"〈",tex:"langle",ttype:LEFTBRACKET},{input:":)",tag:"mo",output:"〉",tex:"rangle",ttype:RIGHTBRACKET},{input:"<<",tag:"mo",output:"〈",tex:null,ttype:LEFTBRACKET},{input:">>",tag:"mo",output:"〉",tex:null,ttype:RIGHTBRACKET},{input:"{:",tag:"mo",output:"{:",tex:null,ttype:LEFTBRACKET,invisible:!0},{input:":}",tag:"mo",output:":}",tex:null,ttype:RIGHTBRACKET,invisible:!0},{input:"int",tag:"mo",output:"∫",tex:null,ttype:CONST},{input:"dx",tag:"mi",output:"{:d x:}",tex:null,ttype:DEFINITION},{input:"dy",tag:"mi",output:"{:d y:}",tex:null,ttype:DEFINITION},{input:"dz",tag:"mi",output:"{:d z:}",tex:null,ttype:DEFINITION},{input:"dt",tag:"mi",output:"{:d t:}",tex:null,ttype:DEFINITION},{input:"oint",tag:"mo",output:"∮",tex:null,ttype:CONST},{input:"del",tag:"mo",output:"∂",tex:"partial",ttype:CONST},{input:"grad",tag:"mo",output:"∇",tex:"nabla",ttype:CONST},{input:"+-",tag:"mo",output:"±",tex:"pm",ttype:CONST},{input:"O/",tag:"mo",output:"∅",tex:"emptyset",ttype:CONST},{input:"oo",tag:"mo",output:"∞",tex:"infty",ttype:CONST},{input:"aleph",tag:"mo",output:"ℵ",tex:null,ttype:CONST},{input:"...",tag:"mo",output:"...",tex:"ldots",ttype:CONST},{input:":.",tag:"mo",output:"∴",tex:"therefore",ttype:CONST},{input:"/_",tag:"mo",output:"∠",tex:"angle",ttype:CONST},{input:"\\ ",tag:"mo",output:" ",tex:null,ttype:CONST},{input:"quad",tag:"mo",output:"  ",tex:null,ttype:CONST},{input:"qquad",tag:"mo",output:"    ",tex:null,ttype:CONST},{input:"cdots",tag:"mo",output:"⋯",tex:null,ttype:CONST},{input:"vdots",tag:"mo",output:"⋮",tex:null,ttype:CONST},{input:"ddots",tag:"mo",output:"⋱",tex:null,ttype:CONST},{input:"diamond",tag:"mo",output:"⋄",tex:null,ttype:CONST},{input:"square",tag:"mo",output:"□",tex:null,ttype:CONST},{input:"|__",tag:"mo",output:"⌊",tex:"lfloor",ttype:CONST},{input:"__|",tag:"mo",output:"⌋",tex:"rfloor",ttype:CONST},{input:"|~",tag:"mo",output:"⌈",tex:"lceiling",ttype:CONST},{input:"~|",tag:"mo",output:"⌉",tex:"rceiling",ttype:CONST},{input:"CC",tag:"mo",output:"ℂ",tex:null,ttype:CONST},{input:"NN",tag:"mo",output:"ℕ",tex:null,ttype:CONST},{input:"QQ",tag:"mo",output:"ℚ",tex:null,ttype:CONST},{input:"RR",tag:"mo",output:"ℝ",tex:null,ttype:CONST},{input:"ZZ",tag:"mo",output:"ℤ",tex:null,ttype:CONST},{input:"f",tag:"mi",output:"f",tex:null,ttype:UNARY,func:!0},{input:"g",tag:"mi",output:"g",tex:null,ttype:UNARY,func:!0},{input:"lim",tag:"mo",output:"lim",tex:null,ttype:UNDEROVER},{input:"Lim",tag:"mo",output:"Lim",tex:null,ttype:UNDEROVER},{input:"sin",tag:"mo",output:"sin",tex:null,ttype:UNARY,func:!0},{input:"cos",tag:"mo",output:"cos",tex:null,ttype:UNARY,func:!0},{input:"tan",tag:"mo",output:"tan",tex:null,ttype:UNARY,func:!0},{input:"sinh",tag:"mo",output:"sinh",tex:null,ttype:UNARY,func:!0},{input:"cosh",tag:"mo",output:"cosh",tex:null,ttype:UNARY,func:!0},{input:"tanh",tag:"mo",output:"tanh",tex:null,ttype:UNARY,func:!0},{input:"cot",tag:"mo",output:"cot",tex:null,ttype:UNARY,func:!0},{input:"sec",tag:"mo",output:"sec",tex:null,ttype:UNARY,func:!0},{input:"csc",tag:"mo",output:"csc",tex:null,ttype:UNARY,func:!0},{input:"log",tag:"mo",output:"log",tex:null,ttype:UNARY,func:!0},{input:"ln",tag:"mo",output:"ln",tex:null,ttype:UNARY,func:!0},{input:"det",tag:"mo",output:"det",tex:null,ttype:UNARY,func:!0},{input:"dim",tag:"mo",output:"dim",tex:null,ttype:CONST},{input:"mod",tag:"mo",output:"mod",tex:null,ttype:CONST},{input:"gcd",tag:"mo",output:"gcd",tex:null,ttype:UNARY,func:!0},{input:"lcm",tag:"mo",output:"lcm",tex:null,ttype:UNARY,func:!0},{input:"lub",tag:"mo",output:"lub",tex:null,ttype:CONST},{input:"glb",tag:"mo",output:"glb",tex:null,ttype:CONST},{input:"min",tag:"mo",output:"min",tex:null,ttype:UNDEROVER},{input:"max",tag:"mo",output:"max",tex:null,ttype:UNDEROVER},{input:"uarr",tag:"mo",output:"↑",tex:"uparrow",ttype:CONST},{input:"darr",tag:"mo",output:"↓",tex:"downarrow",ttype:CONST},{input:"rarr",tag:"mo",output:"→",tex:"rightarrow",ttype:CONST},{input:"->",tag:"mo",output:"→",tex:"to",ttype:CONST},{input:">->",tag:"mo",output:"↣",tex:"rightarrowtail",ttype:CONST},{input:"->>",tag:"mo",output:"↠",tex:"twoheadrightarrow",ttype:CONST},{input:">->>",tag:"mo",output:"⤖",tex:"twoheadrightarrowtail",ttype:CONST},{input:"|->",tag:"mo",output:"↦",tex:"mapsto",ttype:CONST},{input:"larr",tag:"mo",output:"←",tex:"leftarrow",ttype:CONST},{input:"harr",tag:"mo",output:"↔",tex:"leftrightarrow",ttype:CONST},{input:"rArr",tag:"mo",output:"⇒",tex:"Rightarrow",ttype:CONST},{input:"lArr",tag:"mo",output:"⇐",tex:"Leftarrow",ttype:CONST},{input:"hArr",tag:"mo",output:"⇔",tex:"Leftrightarrow",ttype:CONST},{input:"sqrt",tag:"msqrt",output:"sqrt",tex:null,ttype:UNARY},{input:"root",tag:"mroot",output:"root",tex:null,ttype:BINARY},{input:"frac",tag:"mfrac",output:"/",tex:null,ttype:BINARY},{input:"/",tag:"mfrac",output:"/",tex:null,ttype:INFIX},{input:"stackrel",tag:"mover",output:"stackrel",tex:null,ttype:BINARY},{input:"_",tag:"msub",output:"_",tex:null,ttype:INFIX},{input:"^",tag:"msup",output:"^",tex:null,ttype:INFIX},{input:"hat",tag:"mover",output:"^",tex:null,ttype:UNARY,acc:!0},{input:"bar",tag:"mover",output:"¯",tex:"overline",ttype:UNARY,acc:!0},{input:"vec",tag:"mover",output:"→",tex:null,ttype:UNARY,acc:!0},{input:"line",tag:"mover",output:"↔",tex:null,ttype:UNARY,acc:!0},{input:"dot",tag:"mover",output:".",tex:null,ttype:UNARY,acc:!0},{input:"ddot",tag:"mover",output:"..",tex:null,ttype:UNARY,acc:!0},{input:"ul",tag:"munder",output:"̲",tex:"underline",ttype:UNARY,acc:!0},{input:"text",tag:"mtext",output:"text",tex:null,ttype:TEXT},{input:"mbox",tag:"mtext",output:"mbox",tex:null,ttype:TEXT},{input:'"',tag:"mtext",output:"mbox",tex:null,ttype:TEXT},{input:"bb",tag:"mstyle",atname:"fontweight",atval:"bold",output:"bb",tex:null,ttype:UNARY},{input:"mathbf",tag:"mstyle",atname:"fontweight",atval:"bold",output:"mathbf",tex:null,ttype:UNARY},{input:"sf",tag:"mstyle",atname:"fontfamily",atval:"sans-serif",output:"sf",tex:null,ttype:UNARY},{input:"mathsf",tag:"mstyle",atname:"fontfamily",atval:"sans-serif",output:"mathsf",tex:null,ttype:UNARY},{input:"bbb",tag:"mstyle",atname:"mathvariant",atval:"double-struck",output:"bbb",tex:null,ttype:UNARY,codes:AMbbb},{input:"mathbb",tag:"mstyle",atname:"mathvariant",atval:"double-struck",output:"mathbb",tex:null,ttype:UNARY,codes:AMbbb},{input:"cc",tag:"mstyle",atname:"mathvariant",atval:"script",output:"cc",tex:null,ttype:UNARY,codes:AMcal},{input:"mathcal",tag:"mstyle",atname:"mathvariant",atval:"script",output:"mathcal",tex:null,ttype:UNARY,codes:AMcal},{input:"tt",tag:"mstyle",atname:"fontfamily",atval:"monospace",output:"tt",tex:null,ttype:UNARY},{input:"mathtt",tag:"mstyle",atname:"fontfamily",atval:"monospace",output:"mathtt",tex:null,ttype:UNARY},{input:"fr",tag:"mstyle",atname:"mathvariant",atval:"fraktur",output:"fr",tex:null,ttype:UNARY,codes:AMfrk},{input:"mathfrak",tag:"mstyle",atname:"mathvariant",atval:"fraktur",output:"mathfrak",tex:null,ttype:UNARY,codes:AMfrk}],texsymbols=[],i=0;i<symbols.length;i++)symbols[i].tex&&texsymbols.push({input:symbols[i].tex,tag:symbols[i].tag,output:symbols[i].output,ttype:symbols[i].ttype});symbols=symbols.concat(texsymbols),symbols.sort(compareNames),module.exports=symbols},function(module){function HTMLEncode(str){for(var i=str.length,aRet=[];i--;){var iC=str.charCodeAt(i);aRet[i]=lookup[iC]?"&"+lookup[iC]+";":iC>127?"&#"+iC+";":str[i]}return aRet.join("")}var lookup={34:"quot",38:"amp",60:"lt",62:"gt",161:"iexcl",162:"cent",163:"pound",164:"curren",165:"yen",166:"brvbar",167:"sect",168:"uml",169:"copy",170:"ordf",171:"laquo",172:"not",173:"shy",174:"reg",175:"macr",176:"deg",177:"plusmn",178:"sup2",179:"sup3",180:"acute",181:"micro",182:"para",183:"middot",184:"cedil",185:"sup1",186:"ordm",187:"raquo",188:"frac14",189:"frac12",190:"frac34",191:"iquest",192:"Agrave",193:"Aacute",194:"Acirc",195:"Atilde",196:"Auml",197:"Aring",198:"AElig",199:"Ccedil",200:"Egrave",201:"Eacute",202:"Ecirc",203:"Euml",204:"Igrave",205:"Iacute",206:"Icirc",207:"Iuml",208:"ETH",209:"Ntilde",210:"Ograve",211:"Oacute",212:"Ocirc",213:"Otilde",214:"Ouml",215:"times",216:"Oslash",217:"Ugrave",218:"Uacute",219:"Ucirc",220:"Uuml",221:"Yacute",222:"THORN",223:"szlig",224:"agrave",225:"aacute",226:"acirc",227:"atilde",228:"auml",229:"aring",230:"aelig",231:"ccedil",232:"egrave",233:"eacute",234:"ecirc",235:"euml",236:"igrave",237:"iacute",238:"icirc",239:"iuml",240:"eth",241:"ntilde",242:"ograve",243:"oacute",244:"ocirc",245:"otilde",246:"ouml",247:"divide",248:"oslash",249:"ugrave",250:"uacute",251:"ucirc",252:"uuml",253:"yacute",255:"yuml",338:"OElig",339:"oelig",352:"Scaron",353:"scaron",376:"Yuml",402:"fnof",913:"Alpha",914:"Beta",915:"Gamma",916:"Delta",917:"Epsilon",918:"Zeta",919:"Eta",920:"Theta",921:"Iota",922:"Kappa",923:"Lambda",925:"Nu",926:"Xi",927:"Omicron",928:"Pi",929:"Rho",931:"Sigma",932:"Tau",933:"Upsilon",934:"Phi",935:"Chi",936:"Psi",937:"Omega",945:"alpha",946:"beta",947:"gamma",948:"delta",949:"epsilon",950:"zeta",951:"eta",952:"theta",953:"iota",954:"kappa",955:"lambda",956:"mu",957:"nu",958:"xi",959:"omicron",960:"pi",961:"rho",962:"sigmaf",963:"sigma",964:"tau",965:"upsilon",966:"phi",967:"chi",968:"psi",969:"omega",977:"thetasym",978:"upsih",982:"piv",8211:"ndash",8212:"mdash",8216:"lsquo",8217:"rsquo",8218:"sbquo",8220:"ldquo",8221:"rdquo",8222:"bdquo",8224:"dagger",8225:"Dagger",8240:"permil",8249:"lsaquo",8250:"rsaquo",8364:"euro",8465:"image",8472:"weierp",8476:"real",8482:"trade",8501:"alefsym",8592:"larr",8593:"uarr",8594:"rarr",8595:"darr",8596:"harr",8629:"crarr",8656:"lArr",8657:"uArr",8658:"rArr",8659:"dArr",8660:"hArr",8704:"forall",8706:"part",8707:"exist",8709:"empty",8711:"nabla",8712:"isin",8713:"notin",8715:"ni",8719:"prod",8721:"sum",8722:"minus",8727:"lowast",8730:"radic",8733:"prop",8734:"infin",8736:"ang",8743:"and",8744:"or",8745:"cap",8746:"cup",8747:"int",8756:"there4",8764:"sim",8773:"cong",8776:"asymp",8800:"ne",8801:"equiv",8804:"le",8805:"ge",8834:"sub",8835:"sup",8836:"nsub",8838:"sube",8839:"supe",8853:"oplus",8855:"otimes",8869:"perp",8901:"sdot",8968:"lceil",8969:"rceil",8970:"lfloor",8971:"rfloor",9001:"lang",9002:"rang",9674:"loz",9824:"spades",9827:"clubs",9829:"hearts",9830:"diams"};module.exports=HTMLEncode}])});
//# sourceMappingURL=react-math.min.map